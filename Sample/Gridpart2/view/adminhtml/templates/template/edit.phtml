<?php
/**
 * Copyright Â© 2015 Magento. All rights reserved.
 * See COPYING.txt for license details.
 */

use Magento\Framework\App\TemplateTypesInterface;

// @codingStandardsIgnoreFile

/* @var $block \Magento\Newsletter\Block\Adminhtml\Template\Edit */
echo "asdfsdfg";
?>
<form action="<?php /* @escapeNotVerified */ echo $block->getSaveUrl() ?>" method="post" id="gridpart2_template_edit_form" enctype="multipart/form-data">
    <?php echo $block->getBlockHtml('formkey')?>
    <div class="no-display">
        <input type="hidden" id="change_flag_element" name="_change_type_flag" value="" />
        <input type="hidden" id="save_as_flag" name="_save_as_flag" value="<?php /* @escapeNotVerified */ echo $block->getSaveAsFlag() ?>" />
    </div>
    <?php /* @escapeNotVerified */ echo $block->getForm() ?>
</form>
<form action="<?php /* @escapeNotVerified */ echo $block->getPreviewUrl() ?>" method="post" id="newsletter_template_preview_form" target="_blank">
    <?php echo $block->getBlockHtml('formkey')?>
    
</form>
<script>
require([
    'jquery',
    'tinymce',
    'Magento_Ui/js/modal/prompt',
    'Magento_Ui/js/modal/confirm',
    'mage/mage',
    'prototype'
], function(jQuery, tinyMCE, prompt, confirm){

//<![CDATA[
    jQuery('#gridpart2_template_edit_form').mage('form').mage('validation');
    
    templateControl = {

        unconvertedText: '',
        typeChange: false,
        id: 'text',

        events: {
            'click [data-role=template-save]' : 'save',
            'click [data-role=template-save-as]': 'saveAs',
            'click [data-role=template-delete]': 'deleteTemplate'
        },

        init: function () {
            if ($('convert_button_back')) {
                $('convert_button_back').hide();
            }

            this.bindEvents();
        },

        bindEvents: function(){
            var events = this.events,
                eventName,
                selector,
                callback,
                key;

            for( key in events ){
                callback    = this[events[key]];
                key         = key.split(' ');

                eventName   = key[0];
                selector    = key.slice(1).join(' ');

                jQuery(selector).on(eventName, jQuery.proxy(callback, this) );
            }
        },

        save: function() {
            if (this.typeChange) {
                $('change_flag_element').value = '1';
            }
            if(this.isEditor()) {
                tinyMCE.triggerSave();
            }
            // Temporary solution will be replaced after refactoring of newsletter functionality
            jQuery('#gridpart2_template_edit_form').triggerHandler('save');
            return false;
        },

        saveAs: function() {
            var self = this;

            if (this.typeChange) {
                $('change_flag_element').value = '1';
            }

            if($F('code').blank()) {

                prompt({
                    content: '<?php /* @escapeNotVerified */ echo __('Please enter a new template name.') ?>',
                    value: templateControl.templateName + '<?php /* @escapeNotVerified */ echo __(' Copy') ?>',
                    actions: {
                        confirm: function(value) {
                            $('code').value = value;
                            self._saveAs();

                            return false;
                        },
                        cancel: function(){
                            $('code').value = '';
                            // Temporary solution will be replaced after refactoring of newsletter functionality
                            jQuery('#gridpart2_template_edit_form').triggerHandler('save');
                            self._saveAs();

                            return false;
                        }
                    }
                });
            }
        },

        _saveAs: function() {
            $('save_as_flag').value = '1';

            if(this.isEditor()) {
                tinyMCE.triggerSave();
            }
            // Temporary solution will be replaced after refactoring of newsletter functionality
            jQuery('#gridpart2_template_edit_form').triggerHandler('save');
            return false;
        },


        deleteTemplate: function() {
            confirm({
                content: "<?php /* @escapeNotVerified */ echo __('Are you sure you want to delete this template?') ?>",
                actions: {
                    confirm: function() {
                        window.location.href = '<?php /* @escapeNotVerified */ echo $block->getDeleteUrl() ?>';
                    }
                }
            });
        },

        isEditor: function() {
            return (typeof tinyMceEditors != 'undefined' && tinyMceEditors.get(this.id) != undefined)
        },

        getEditor: function() {
            return tinyMceEditors.get(this.id);
        }
    };

    templateControl.init();
    
//]]>

});
</script>
